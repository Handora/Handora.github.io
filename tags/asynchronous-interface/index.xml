<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Asynchronous Interface on Never stop learning!</title>
    <link>http://handora.github.io/tags/asynchronous-interface/</link>
    <description>Recent content in Asynchronous Interface on Never stop learning!</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Handora</copyright>
    <lastBuildDate>Mon, 16 Apr 2018 16:32:19 +0800</lastBuildDate>
    
	<atom:link href="http://handora.github.io/tags/asynchronous-interface/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PNUTS Paper Review</title>
      <link>http://handora.github.io/post/2018/04/2018-04-16-pnuts/</link>
      <pubDate>Mon, 16 Apr 2018 16:32:19 +0800</pubDate>
      
      <guid>http://handora.github.io/post/2018/04/2018-04-16-pnuts/</guid>
      <description>PNUTS: Yahoo!&amp;rsquo;s Hosted Data Serving Platform Buzzwords  data storage  hashed table ordered table  geographically distributed service automated load-balancing and failover relaxed consistency  per-record timeline consistency  asynchronous notification  Pub-Sub Message System Yahoo! Message Broker(YMB)  hosting various consistency guarantee  read-any read-critical read-latest write test-and-set-write  scatter-gather engine  Summary The paper aims at Web Application which requires scalability, short response time even geographically distributed, high availability, fault tolerance, and relaxed consistency.</description>
    </item>
    
    <item>
      <title>Zookeeper Paper Summary</title>
      <link>http://handora.github.io/post/2018/04/2018-04-01-zookeeper/</link>
      <pubDate>Sun, 01 Apr 2018 18:00:25 +0800</pubDate>
      
      <guid>http://handora.github.io/post/2018/04/2018-04-01-zookeeper/</guid>
      <description>ZooKeeper: Wait-free coordination for Internet-scale systems buzzword  wait-free property distributed lock services FIFO client ordering asynchronous linearizability linearizable write atomic broadcast protocol  Zab dominated by reads read locally  Znode  Regular Ephemeral sequential flag  use zookeeper to implement more powerful primitives Herd effect Fetching service based on zookeeper linearizability vs. serializability  Summary This paper describes the ZooKeeper as a coordination kernel which provides high-performance service can be used to implement more powerful primitives.</description>
    </item>
    
  </channel>
</rss>