<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>In Memory Database System on Never stop learning!</title>
    <link>http://handora.github.io/tags/in-memory-database-system/</link>
    <description>Recent content in In Memory Database System on Never stop learning!</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Handora</copyright>
    <lastBuildDate>Tue, 17 Apr 2018 16:55:54 +0800</lastBuildDate>
    
	<atom:link href="http://handora.github.io/tags/in-memory-database-system/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Query Processing with LLVM Paper Review</title>
      <link>http://handora.github.io/post/2018/04/2018-04-17-llvm/</link>
      <pubDate>Tue, 17 Apr 2018 16:55:54 +0800</pubDate>
      
      <guid>http://handora.github.io/post/2018/04/2018-04-17-llvm/</guid>
      <description>Efficiently Compiling Efficient Query Plans for Modern Hardware Buzzwords  tuple at a time  Volcano iterator model MonetDB VectorWise, Peloton  operation at a time vector at a time Transpilation  Gcc compilation time may be long  JIT Compilatioon  push-based data-centric keep tuple in CPU register LLVM toolkit intermediate representation(IR)  HyPer\&amp;rsquo;s Adaptive Execution model  Summary For the in-memory DBMS, the CPU becomes the bottlenecks of CPU.</description>
    </item>
    
    <item>
      <title>In-memory OLTP and Future Improvements Paper review</title>
      <link>http://handora.github.io/post/2018/04/2018-04-13-future-oltp/</link>
      <pubDate>Fri, 13 Apr 2018 21:45:24 +0800</pubDate>
      
      <guid>http://handora.github.io/post/2018/04/2018-04-13-future-oltp/</guid>
      <description>OLTP Through the Looking Glass, and What We Found There Buzzwords  main memory transaction processing performance measurement new architecture  logless single thread transaction less  TPC-C benchmark cluster computing trend  shared disk shared memory shared nothing   Summary Currently, many history of the DBMSs is dealing with the limitation of the hardware. The architecture of the many current DBMSs is also similar to the architecture in the 1970s.</description>
    </item>
    
  </channel>
</rss>